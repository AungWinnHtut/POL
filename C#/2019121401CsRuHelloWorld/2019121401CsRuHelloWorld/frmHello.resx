<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picGf.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>